function toggleMenu() { const e = document.querySelector(".toggle"), t = document.querySelector(".menu"); e.classList.toggle("active"), t.classList.toggle("active") } window.addEventListener("scroll", () => { document.querySelector("header").classList.toggle("sticky", window.scrollY > 0) }); const typedTextSpan = document.querySelector(".typed-text"), cursorSpan = document.querySelector(".cursor"), textArray = ["Full Stack Web Developer", "Student"], typingDelay = 100, erasingDelay = 100, newTextDelay = 1e3; let textArrayIndex = 0, charIndex = 0; function type() { charIndex < textArray[textArrayIndex].length ? (cursorSpan.classList.contains("typing") || cursorSpan.classList.add("typing"), typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex), charIndex++, setTimeout(type, typingDelay)) : (cursorSpan.classList.remove("typing"), setTimeout(erase, newTextDelay)) } function erase() { charIndex > 0 ? (cursorSpan.classList.contains("typing") || cursorSpan.classList.add("typing"), typedTextSpan.textContent = textArray[textArrayIndex].substring(0, charIndex - 1), charIndex--, setTimeout(erase, erasingDelay)) : (cursorSpan.classList.remove("typing"), ++textArrayIndex >= textArray.length && (textArrayIndex = 0), setTimeout(type, typingDelay + 1100)) } document.addEventListener("DOMContentLoaded", function () { textArray.length && setTimeout(type, newTextDelay + 250) }), $(document).ready(() => { $(".card").on("mouseenter", function (e) { x = e.pageX - $(this).offset().left, y = e.pageY - $(this).offset().top, $(this).find("span").css({ top: y, left: x }) }), $(".card").on("mouseout", e => { x = e.pageX - $(this).offset().left, y = e.pageY - $(this).offset().top, $(this).find("span").css({ top: y, left: x }) }) }); let progress = document.getElementById("progressbar"), totalHeight = document.body.scrollHeight - window.innerHeight; window.onscroll = function () { let e = window.pageYOffset / totalHeight * 100; progress.style.height = e + "%" };

// PRELOADER
const preloader = document.querySelector(".preloader");

const fadeOutEffect = setInterval(() => {
  if (!preloader.style.opacity) {
    preloader.style.opacity = 1;
  }
  if (preloader.style.opacity > 0) {
    preloader.style.opacity -= 0.1;
  } else {
    clearInterval(fadeOutEffect);
    preloader.classList.add("hide-preloader");
  }
}, 200);